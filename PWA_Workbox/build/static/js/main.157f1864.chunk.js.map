{"version":3,"sources":["reducer/counter.js","reducer/isLogged.js","reducer/landing.js","reducer/index.js","store/configureStore.js","action/landing.js","container/MaterialList.js","utils/History.js","component/EmployeeList.js","component/Header.js","component/EmployeeDetails.js","component/TablueList.js","component/Navigation.js","serviceWorker.js","index.js"],"names":["counterRedicer","state","action","type","loggedReduce","items","allReducer","combineReducers","counter","counterReduser","logged","loggerReducer","rootPersistConfig","key","storage","list","rootReducer","persistCombineReducers","persistReducer","toastr","store","createStore","applyMiddleware","thunk","routerMiddleware","persistStore","fetchItems","dispatch","fetch","then","response","json","itemsreceived","catch","err","console","error","MaterialList","List","onClick","this","props","click","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListSubheader","subheader","ListItemText","primary","secondary","Fragment","Typography","component","variant","color","Divider","Component","history","EmployeeList","navigateToDetails","push","pathname","detail","data","getItems","timer","setInterval","employeeList","setState","tt","className","map","employee_name","employee_salary","employee_age","connect","Object","assign","bindActionCreators","Header","style","styl","background","width","padding","EmployeeDetails","location","useLocation","useEffect","log","Button","window","tablue","TablueList","ref","useRef","tableau","Viz","current","Navigation","History","path","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.157f1864.chunk.js","sourcesContent":["const counterRedicer = (state= 0, action) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return state + 1\n        case 'DECREMENT':\n            return state - 1\n            default:\n             return state \n    }\n\n}\nexport default counterRedicer","const loggedReduce = (state= false, action)=>{\n    switch(action.type){\n        case 'SIGN_IN':\n            return !state\n         default:\n             return state \n    }\n}\n\nexport default loggedReduce","const items = (state = [], action) => {\n\n    switch (action.type) {\n        case 'ITEMS_EMPLOYEE':\n            return [action.items]\n        default:\n            return state\n    }\n}\n\nexport default items","import counterReduser from \"./counter\"\nimport loggerReducer from \"./isLogged\"\nimport items from \"./landing\"\nimport { combineReducers }  from 'redux'\n\nconst allReducer = combineReducers({\n    counter: counterReduser,\n    logged: loggerReducer,\n    items: items,\n})\n\nexport default allReducer ","import {createStore,applyMiddleware} from 'redux'\nimport {persistCombineReducers,persistReducer,persistStore} from \"redux-persist\"\nimport storage from \"redux-persist/lib/storage\"\nimport {reducer as toastr} from \"react-redux-toastr\"\nimport thunk from \"redux-thunk\"\nimport {routerMiddleware} from \"react-router-redux\"\nimport items from \"../reducer/index\"\n\nconst rootPersistConfig = {\n    key: \"root\",\n    storage,\n    list: [\"items\"]\n}\nconst rootReducer = persistCombineReducers(rootPersistConfig,{\n    items:persistReducer(\n        {\n        key: \"items\",\n        storage,\n        list : [\"fetching\",\"more\"] \n        },\n        items\n    ), \n    toastr,\n});\n\nconst store = createStore(rootReducer,applyMiddleware(thunk,routerMiddleware()))\npersistStore(store)\n\nexport default store","export const itemsreceived = (items) => (\n    {\n        type: 'ITEMS_EMPLOYEE',\n        items\n    }\n)\n\nexport const fetchItems = () => (dispatch) => {\n    return fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n        .then((response) => response.json())\n        .then((json) => dispatch(itemsreceived(json)))\n        .catch(err => console.error(err))\n}","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { ListItemIcon, ListSubheader } from '@material-ui/core';\n\nexport default class MaterialList extends Component {\n\n    render() {\n        return (\n            <List onClick = {this.props.click}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </ListItemAvatar>\n\n                    <ListSubheader >\n                        {this.props.subheader}\n                    </ListSubheader>\n                    <ListItemText\n                        primary={this.props.primary}\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"textPrimary\">\n                                </Typography>\n                                {this.props.secondary}\n                            </React.Fragment>} />\n                </ListItem>\n\n                <Divider variant=\"inset\" component=\"li\" />\n            </List>\n        );\n    }\n}\n\n","import { createBrowserHistory as history} from 'history';\n\nexport default history();","import React, { Component } from \"react\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport { fetchItems } from \"../action/landing\"\nimport MaterialList from \"../container/MaterialList\"\n\nimport '../index.css';\n\nimport history from \"../utils/History\"\n\nclass EmployeeList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: []\n        }\n    }\n\n    componentWillMount() {\n        this.getItems()\n\n        this.timer = setInterval(() => this.getItems(), 5000);\n    }\n\n    getItems() {\n        const { dispatch } = this.props\n        dispatch(fetchItems())\n\n        const tt = this.props\n        const employeeList = tt.items.items.data\n\n        this.setState({ data: employeeList });\n\n        //  this.props.fetchItems()\n        //     .then((res) => {\n        //         console.log(res)\n        //     })\n    }\n\n    navigateToDetails = (list) => {\n        history.push({\n            pathname: '/employeeDetails',\n            state: { detail: list }\n        });\n    }\n\n    render() {\n        const tt = this.props;\n        const employeeList = tt.items.items[0] ? tt.items.items[0].data : [];\n\n        return (\n            <div className=\"container\">\n                {employeeList.map(list => {\n                    return (\n                        <MaterialList\n                            primary={list.employee_name}\n                            secondary={list.employee_salary}\n                            subheader={list.employee_age}\n                            click={() => this.navigateToDetails(list)} />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    items: state.items\n})\nfunction mapDispathToProps(dispatch) {\n    return Object.assign({ dispatch }, bindActionCreators({ fetchItems }, dispatch));\n\n}\nexport default connect(mapStateToProps, mapDispathToProps)(EmployeeList)","import React, { Component } from 'react'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <header style={styl}>\n                    Redux Application\n                </header>\n\n            </div>\n        )\n    }\n}\n\nconst styl = {\n    background: \"#339\",\n    width: '100%',\n    padding: '1rem 5%',\n    color: \"white\"\n}\n\nexport default Header","import React, { useEffect } from 'react'\nimport { useLocation } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nimport '../index.css';\nimport history from \"../utils/History\"\n\n\nconst EmployeeDetails = props => {\n    const location = useLocation();\n\n    const materialClick = () => {\n        history.push({\n            pathname: '/TablueList'\n        });\n    }\n\n    useEffect(() => {\n        console.log(location.pathname);\n        console.log(location.state.detail);\n    }, [location]);\n\n    return (\n        <div style={{ padding: 30 }}>\n            <p1>{location.state.detail.employee_name}</p1><br /> <br />\n            <p2>{location.state.detail.employee_age}</p2><br /> <br />\n\n            <Button onClick={materialClick} variant=\"contained\" color=\"secondary\">\n                Tablue\n     </Button>\n        </div>\n    )\n}\nexport default EmployeeDetails","import React, { useEffect, useRef } from 'react'\n\nconst { tablue } = window\n\nfunction TablueList() {\n\n    const url = \"https://public.tableau.com/views/LearnEmbeddedAnalytics/SalesOverviewDashboard\"\n\n    const ref = useRef(null)\n\n    function initViz() {\n        new window.tableau.Viz(ref.current, url)\n    }\n\n    useEffect(() => {\n        initViz()\n    }, [])\n\n    return (\n        <div>\n            <div ref={ref} />\n        </div>\n    )\n}\n\nexport default TablueList","import React, { Component } from \"react\"\nimport { Router, Switch, Route } from \"react-router-dom\";\n\nimport EmployeeList from \"../component/EmployeeList\"\nimport Header from \"../component/Header\"\nimport EmployeeDetails from \"../component/EmployeeDetails\"\nimport History from \"../utils/History\"\nimport TablueList from \"../component/TablueList\"\n\nclass Navigation extends Component {\n  render() {\n    return (\n      <Router history={History}>\n        <Header/>\n        <Switch>\n          <Route path=\"/\" exact component={EmployeeList} />\n          <Route path=\"/employeeDetails\" component={EmployeeDetails} />\n          <Route path = \"/tablueList\" component= {TablueList}/>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default Navigation;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if ('serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport store from \"./store/configureStore\"\nimport Navigation from \"./component/Navigation\"\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker'; \n\nrender(\n  <Provider store={store}>\n    <Router>\n    <Navigation/>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nconsole.log(\"Reduxxx\" + store)\n\nserviceWorker.register();\n\n\n"],"sourceRoot":""}